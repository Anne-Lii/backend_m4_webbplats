{"mappings":"ACIA,SAAS,gBAAgB,CAAC,mBAAoB,KAE1C,IAAM,EAAM,0CACN,EAAe,SAAS,cAAc,CAAC,gBACvC,EAAkB,SAAS,cAAc,CAAC,mBAE5C,GACA,EAAa,gBAAgB,CAAC,SAAU,eAAgB,CAAK,EACzD,EAAM,cAAc,GAGpB,IAAM,EAAW,SAAS,cAAc,CAAC,eAAe,KAAK,CACvD,EAAW,SAAS,cAAc,CAAC,eAAe,KAAK,CACvD,EAAQ,SAAS,cAAc,CAAC,YAAY,KAAK,CAGvD,GAAI,CAEA,IAAM,EAAW,MAAM,MAAM,EAAM,YAAa,CAC5C,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,CACjB,SAAU,EACV,SAAU,EACV,MAAO,CACX,EACJ,GACA,GAAI,EAAS,EAAE,CACX,EAAgB,WAAW,CAAG,yBAc1C,SAAS,cAAc,CAAC,eAAe,KAAK,CAAG,GAC/C,SAAS,cAAc,CAAC,eAAe,KAAK,CAAG,GAC/C,SAAS,cAAc,CAAC,YAAY,KAAK,CAAG,OAd7B,CACH,IAAM,EAAe,MAAM,EAAS,IAAI,EACxC,CAAA,EAAgB,WAAW,CAAG,EAAa,KAAK,AACpD,CACJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,oBAAqB,GACnC,EAAgB,WAAW,CAAG,4DAClC,CACJ,GASJ,IAAM,EAAY,SAAS,cAAc,CAAC,aACpC,EAAe,SAAS,cAAc,CAAC,gBAGzC,GACA,EAAU,gBAAgB,CAAC,SAAU,eAAgB,CAAK,EACtD,EAAM,cAAc,GAEpB,SAAS,cAAc,CAAC,kBAAkB,SAAS,CAAG,UAEtD,SAAS,cAAc,CAAC,kBAAkB,SAAS,CAAG,WACtD,WAAW,KACP,SAAS,cAAc,CAAC,kBAAkB,SAAS,CAAG,WAC1D,EAAG,KACH,WAAW,KACP,SAAS,cAAc,CAAC,kBAAkB,SAAS,CAAG,YAC1D,EAAG,KAIH,IAAM,EAAW,SAAS,cAAc,CAAC,YAAY,KAAK,CACpD,EAAW,SAAS,cAAc,CAAC,YAAY,KAAK,CAE1D,GAAI,CAEA,IAAM,EAAW,MAAM,MAAM,EAAM,SAAU,CACzC,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,CACjB,SAAU,EACV,SAAU,CACd,EACJ,GAKA,GAAI,EAAS,EAAE,CAAE,CAEb,IAAM,EAAQ,AADD,CAAA,MAAM,EAAS,IAAI,EAAhC,EACmB,QAAQ,CAAC,KAAK,CAKjC,aAAa,OAAO,CAAC,QAAS,GAG9B,EAAa,SAAS,CAAG,GAGN,aAAa,OAAO,CAAC,SAQpC,OAAO,QAAQ,CAAC,IAAI,CAAG,eAJvB,OAAO,QAAQ,CAAC,IAAI,CAAG,YAO/B,KAAO,CACH,IAAM,EAAe,MAAM,EAAS,IAAI,EACxC,CAAA,EAAa,WAAW,CAAG,EAAa,KAAK,AACjD,CAEJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,kBAAmB,GACjC,EAAa,WAAW,CAAG,0DAC/B,CACJ,GAGJ,IAAM,EAAY,SAAS,cAAc,CAAC,aAEtC,GACA,EAAU,gBAAgB,CAAC,QAAS,KAEhC,aAAa,UAAU,CAAC,SAGxB,OAAO,QAAQ,CAAC,IAAI,CAAG,YAC3B,EAER","sources":["<anon>","src/js/main.js"],"sourcesContent":["var $d706c914d748cb55$exports = {};\n//code written by Anne-Lii Hansen VT 2024\n\"use strict\";\n// Run authentication check when page loads\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const url = \"https://backend-m4-api.onrender.com/api\";\n    const registerForm = document.getElementById(\"registerForm\"); //get form for register\n    const registerMessage = document.getElementById(\"registerMessage\");\n    if (registerForm) registerForm.addEventListener(\"submit\", async function(event) {\n        event.preventDefault(); //prevent standard form behavior\n        //read in value from input\n        const username = document.getElementById(\"usernameReg\").value;\n        const password = document.getElementById(\"passwordReg\").value;\n        const email = document.getElementById(\"emailReg\").value;\n        //fetch API\n        try {\n            const response = await fetch(url + \"/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username: username,\n                    password: password,\n                    email: email\n                })\n            });\n            if (response.ok) {\n                registerMessage.textContent = \"Anv\\xe4ndare registrerad!\";\n                resetForm(); //reset form\n            } else {\n                const errorMessage = await response.json();\n                registerMessage.textContent = errorMessage.error;\n            }\n        } catch (error) {\n            console.error(\"Registreringsfel:\", error);\n            registerMessage.textContent = \"Ett fel intr\\xe4ffade vid registreringen. F\\xf6rs\\xf6k igen senare.\";\n        }\n    });\n    function resetForm() {\n        document.getElementById(\"usernameReg\").value = \"\";\n        document.getElementById(\"passwordReg\").value = \"\";\n        document.getElementById(\"emailReg\").value = \"\";\n    }\n    const loginForm = document.getElementById(\"loginForm\"); //get form for login\n    const loginMessage = document.getElementById(\"loginMessage\");\n    //event submit loginForm\n    if (loginForm) loginForm.addEventListener(\"submit\", async function(event) {\n        event.preventDefault(); //prevent standard form behavior\n        document.getElementById(\"loadingMessage\").innerText = \"Loading\"; //Text \"Loading\" shows while awaiting fetch\n        document.getElementById(\"loadingMessage\").innerText = \"Loading.\";\n        setTimeout(()=>{\n            document.getElementById(\"loadingMessage\").innerText = \"Loading..\";\n        }, 500);\n        setTimeout(()=>{\n            document.getElementById(\"loadingMessage\").innerText = \"Loading...\";\n        }, 1000);\n        // Get username and password from inlogForm\n        const username = document.getElementById(\"username\").value;\n        const password = document.getElementById(\"password\").value;\n        try {\n            //send inlog to API\n            const response = await fetch(url + \"/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username: username,\n                    password: password\n                })\n            });\n            // Check if inlog was succesful\n            if (response.ok) {\n                const data = await response.json();\n                const token = data.response.token;\n                // save token in localStorage\n                localStorage.setItem(\"token\", token);\n                //clear messages\n                loginMessage.innerHTML = \"\";\n                // check if user is authenticated\n                const localtoken = localStorage.getItem(\"token\");\n                if (!localtoken) //unvalid JTW message redirect to login\n                window.location.href = \"index.html\";\n                else // Redirect user to mypages protected route\n                window.location.href = \"mypages.html\";\n            } else {\n                const errorMessage = await response.json();\n                loginMessage.textContent = errorMessage.error;\n            }\n        } catch (error) {\n            console.error(\"Inloggningsfel:\", error);\n            loginMessage.textContent = \"Ett fel intr\\xe4ffade vid inloggningen. F\\xf6rs\\xf6k igen senare.\";\n        }\n    });\n    const logoutBtn = document.getElementById(\"logoutBtn\");\n    if (logoutBtn) logoutBtn.addEventListener(\"click\", ()=>{\n        // Rensa token från localStorage\n        localStorage.removeItem(\"token\");\n        // Omdirigera användaren tillbaka till inloggningssidan\n        window.location.href = \"index.html\";\n    });\n});\n\n\n//# sourceMappingURL=index.9b5d723a.js.map\n","//code written by Anne-Lii Hansen VT 2024\r\n\"use strict\"\r\n\r\n// Run authentication check when page loads\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {   \r\n\r\n    const url = \"https://backend-m4-api.onrender.com/api\";\r\n    const registerForm = document.getElementById(\"registerForm\");//get form for register\r\n    const registerMessage = document.getElementById(\"registerMessage\");\r\n\r\n    if (registerForm) {\r\n        registerForm.addEventListener(\"submit\", async function (event) {\r\n            event.preventDefault();//prevent standard form behavior\r\n\r\n            //read in value from input\r\n            const username = document.getElementById(\"usernameReg\").value;\r\n            const password = document.getElementById(\"passwordReg\").value;\r\n            const email = document.getElementById(\"emailReg\").value;\r\n\r\n            //fetch API\r\n            try {\r\n\r\n                const response = await fetch(url + \"/register\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password,\r\n                        email: email\r\n                    })\r\n                });\r\n                if (response.ok) {\r\n                    registerMessage.textContent = \"Användare registrerad!\";\r\n                    resetForm();//reset form\r\n                } else {\r\n                    const errorMessage = await response.json();\r\n                    registerMessage.textContent = errorMessage.error;\r\n                }\r\n            } catch (error) {\r\n                console.error('Registreringsfel:', error);\r\n                registerMessage.textContent = \"Ett fel inträffade vid registreringen. Försök igen senare.\";\r\n            }\r\n        });\r\n    }\r\n\r\n    function resetForm() {\r\n        document.getElementById(\"usernameReg\").value = \"\";\r\n        document.getElementById(\"passwordReg\").value = \"\";\r\n        document.getElementById(\"emailReg\").value = \"\";\r\n    }\r\n\r\n    const loginForm = document.getElementById(\"loginForm\");//get form for login\r\n    const loginMessage = document.getElementById(\"loginMessage\");\r\n\r\n    //event submit loginForm\r\n    if (loginForm) {\r\n        loginForm.addEventListener(\"submit\", async function (event) {\r\n            event.preventDefault();//prevent standard form behavior\r\n\r\n            document.getElementById(\"loadingMessage\").innerText = \"Loading\";//Text \"Loading\" shows while awaiting fetch\r\n\r\n            document.getElementById(\"loadingMessage\").innerText = \"Loading.\";\r\n            setTimeout(() => {\r\n                document.getElementById(\"loadingMessage\").innerText = \"Loading..\";\r\n            }, 500);\r\n            setTimeout(() => {\r\n                document.getElementById(\"loadingMessage\").innerText = \"Loading...\";\r\n            }, 1000);\r\n\r\n\r\n            // Get username and password from inlogForm\r\n            const username = document.getElementById(\"username\").value;\r\n            const password = document.getElementById(\"password\").value;\r\n\r\n            try {\r\n                //send inlog to API\r\n                const response = await fetch(url + \"/login\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password\r\n                    })\r\n                });\r\n\r\n               \r\n\r\n                // Check if inlog was succesful\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    const token = data.response.token;\r\n\r\n                   \r\n\r\n                    // save token in localStorage\r\n                    localStorage.setItem(\"token\", token);\r\n                    \r\n                    //clear messages\r\n                    loginMessage.innerHTML = \"\";\r\n\r\n                    // check if user is authenticated\r\n                    const localtoken = localStorage.getItem(\"token\");\r\n                    if (!localtoken) {\r\n\r\n                        //unvalid JTW message redirect to login\r\n                        window.location.href = \"index.html\";\r\n\r\n                    } else {\r\n                        // Redirect user to mypages protected route\r\n                        window.location.href = \"mypages.html\";\r\n                    }\r\n\r\n                } else {\r\n                    const errorMessage = await response.json();\r\n                    loginMessage.textContent = errorMessage.error;\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Inloggningsfel:', error);\r\n                loginMessage.textContent = 'Ett fel inträffade vid inloggningen. Försök igen senare.';\r\n            }\r\n        });\r\n    }\r\n\r\n    const logoutBtn = document.getElementById(\"logoutBtn\");\r\n\r\n    if (logoutBtn) {\r\n        logoutBtn.addEventListener(\"click\", () => {\r\n            // Rensa token från localStorage\r\n            localStorage.removeItem(\"token\");\r\n\r\n            // Omdirigera användaren tillbaka till inloggningssidan\r\n            window.location.href = \"index.html\";\r\n        });\r\n    }\r\n});\r\n"],"names":["document","addEventListener","url","registerForm","getElementById","registerMessage","event","preventDefault","username","value","password","email","response","fetch","method","headers","body","JSON","stringify","ok","textContent","errorMessage","json","error","console","loginForm","loginMessage","innerText","setTimeout","token","data","localStorage","setItem","innerHTML","getItem","window","location","href","logoutBtn","removeItem"],"version":3,"file":"index.9b5d723a.js.map"}